# Pre-commit hooks configuration for LLM Tab Cleaner
# See https://pre-commit.com for more information

default_language_version:
  python: python3.11

repos:
  # Built-in hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: check-yaml
        args: [--allow-multiple-documents]
      - id: check-toml
      - id: check-json
      - id: check-xml
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-symlinks
      - id: check-added-large-files
        args: [--maxkb=1000]
      - id: check-docstring-first
      - id: debug-statements
      - id: detect-private-key
      - id: fix-byte-order-marker
      - id: mixed-line-ending
        args: [--fix=lf]
      - id: requirements-txt-fixer

  # Security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-c, .bandit, -r, src/]
        exclude: tests/

  # Python formatting and linting
  - repo: https://github.com/psf/black
    rev: 24.4.2
    hooks:
      - id: black
        language_version: python3
        args: [--line-length=88]

  - repo: https://github.com/charliermarsh/ruff-pre-commit
    rev: v0.4.8
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
      - id: ruff-format

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.10.0
    hooks:
      - id: mypy
        additional_dependencies: [types-requests, types-setuptools]
        args: [--strict, --ignore-missing-imports]
        exclude: ^(tests/|docs/|scripts/)

  # Import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--profile=black, --multi-line=3]

  # Docstring formatting
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args: [--convention=google]
        exclude: ^(tests/|docs/|scripts/|examples/)

  # Security and dependency checks
  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
    rev: v1.3.2
    hooks:
      - id: python-safety-dependencies-check
        args: [--ignore=70612]  # Ignore jinja2 vulnerability in docs

  # Documentation spell checking
  - repo: https://github.com/codespell-project/codespell
    rev: v2.2.6
    hooks:
      - id: codespell
        args: [--write-changes]
        exclude: ^(.*\.lock|.*\.json|.*\.min\..*)$

  # Secrets detection
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: [--baseline, .secrets.baseline]
        exclude: .*\.lock$

  # Notebook output clearing
  - repo: https://github.com/kynan/nbstripout
    rev: 0.6.1
    hooks:
      - id: nbstripout

  # Local custom hooks for comprehensive checks
  - repo: local
    hooks:
      # Test coverage check
      - id: coverage-check
        name: coverage-check
        entry: bash
        language: system
        pass_filenames: false
        args:
          - -c
          - |
            coverage run -m pytest tests/ --tb=short -x && \
            coverage report --fail-under=80
        stages: [pre-push]

      # Security audit
      - id: security-audit
        name: security-audit
        entry: bash
        language: system
        pass_filenames: false
        args:
          - -c
          - |
            pip-audit --desc --format=text || true
            bandit -r src/ -f txt || true
        stages: [pre-push]

# Global configuration
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: [coverage-check, security-audit]
  submodules: false